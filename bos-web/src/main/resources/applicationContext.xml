<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:jaxws="http://cxf.apache.org/jaxws"
	   xmlns:soap="http://cxf.apache.org/bindings/soap"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd
					http://cxf.apache.org/bindings/soap
					http://cxf.apache.org/schemas/configuration/soap.xsd
					http://cxf.apache.org/jaxws
					http://cxf.apache.org/schemas/jaxws.xsd">

	<!-- 加载属性文件 -->
	<context:property-placeholder location="classpath:db.properties"/>

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"/>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
		<property name="user" value="${jdbc.user}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>

	<!-- 配置LocalSessionFactoryBean，spring提供的用于整合hibernate的工厂bean -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 注入hibernate相关的属性配置 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/ssh_bos</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
            </props>
		</property>
		<!-- 注入hibernate的映射文件 -->
		<property name="mappingLocations">
			<list>
				<value>classpath:com/yw/bos/domain/*.xml</value>
            </list>
		</property>
        <property name="annotatedClasses">
            <list>
                <value>com.yw.bos.domain.User</value>
                <value>com.yw.bos.domain.Decidedzone</value>
                <value>com.yw.bos.domain.Region</value>
                <value>com.yw.bos.domain.Staff</value>
                <value>com.yw.bos.domain.Subarea</value>
				<value>com.yw.bos.domain.Noticebill</value>
				<value>com.yw.bos.domain.Workbill</value>
				<value>com.yw.bos.domain.Workordermanage</value>
                <value>com.yw.bos.domain.Function</value>
                <value>com.yw.bos.domain.Role</value>
            </list>
        </property>
    </bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<!-- 组件扫描 -->
	<context:component-scan base-package="com.yw.bos"/>

	<!-- 支持spring注解 -->
	<context:annotation-config/>

	<tx:annotation-driven/>

	<!--注册cxf-->
	<jaxws:client id="crmClient"
				  serviceClass="com.yw.bos.crm.ICustomerService"
				  address="http://localhost:8081/crmservice/service/customer"/>

	<!--<bean id="client" class="com.yw.bos.crm.ICustomerService" factory-bean="clientFactory" factory-method="create"/>-->
	<!--<bean id="clientFactory" class="org.apache.cxf.frontend.ClientProxyFactoryBean">-->
		<!--<property name="serviceClass" value="com.yw.bos.crm.ICustomerService"/>-->
		<!--<property name="address" value="http://localhost:8081/crmservice/service/customer"/>-->
	<!--</bean>-->

	<!--配置shiro过滤器工厂-->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!--注入安全管理器对象-->
		<property name="securityManager" ref="securityManager"></property>
		<!--注入相关URL-->
		<property name="loginUrl" value="/login.jsp"/>
		<property name="successUrl" value="/index.jsp"/>
		<property name="unauthorizedUrl" value="/unauthorized.jsp"/>
		<!--URL的拦截-->
		<property name="filterChainDefinitions" >
			<value>
				/css/** = anon
				/js/** = anon
				/images/** = anon
				/validatecode.jsp* = anon
				/login.jsp = anon
				/userAction_login.action = anon
				<!--/page_base_staff.action = perms["staff-list"]-->
				/* = authc
			</value>
		</property>

	</bean>

	<!--安全管理器对象-->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="bosRealm"/>
		<property name="cacheManager" ref="ehCacheManager"/>
	</bean>

	<!--注册缓存管理器-->
	<bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />
	</bean>

	<!--注册realm-->
	<bean id="bosRealm" class="com.yw.bos.web.realm.BOSRealm"/>

	<!--shiro框架注解-->
	<bean id="defaultAdvisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<property name="proxyTargetClass" value="true"/>
	</bean>

	<!--配置shiro切面类-->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"/>


	<!-- 注册自定义作业类 -->
	<bean id="myJob" class="com.yw.bos.jobs.MailJob">
		<property name="username" value="username"></property>
		<property name="password" value="password"></property>
		<property name="smtpServer" value="SMTP.126.com"></property>
	</bean>
	<!-- 配置JobDetail -->
	<bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<!-- 注入目标对象 -->
		<property name="targetObject" ref="myJob"/>
		<!-- 注入目标方法 -->
		<property name="targetMethod" value="execute"/>
	</bean>
	<!-- 配置触发器 -->
	<bean id="myTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<!-- 注入任务详情对象 -->
		<property name="jobDetail" ref="jobDetail"/>
		<!-- 注入cron表达式，通过这个表达式指定触发的时间点 -->
		<property name="cronExpression">
			<value>0 * 1 * * ?</value>
		</property>
	</bean>
	<!-- 配置调度工厂 -->
	<bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<!-- 注入触发器 -->
		<property name="triggers">
			<list>
				<ref bean="myTrigger"/>
			</list>
		</property>
	</bean>
</beans>
